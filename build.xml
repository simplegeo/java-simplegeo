<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="simplegeo-client">
	<property name="build.src" value="${basedir}/src" />
	<property name="java.build.lib" value="${basedir}/libs/" />
	<property name="build.out" value="${basedir}/bin" />
	<property name="build.classes" value="${build.out}/classes" />
	<property name="build.test.dir" value="${build.out}/test" />
	<property name="javadoc.dir" value="${build.out}/javadoc" />
	<property name="test.dir" value="${basedir}/tests" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.classes" value="${build.out}/test/classes" />
	<property name="ant.lib" value="${basedir}/ant/lib" />

	<property name="dist.dir" value="${basedir}/dist" />
	<property name="version" value="2.2.2" />
	<property name="final.name" value="java-simplegeo-${version}" />
	<property name="final.places.name" value="java-simplegeo-places-${version}" />
	<property name="final.context.name" value="java-simplegeo-context-${version}" />
	<property name="final.storage.name" value="java-simplegeo-storage-${version}" />

    <path id="java.simplegeo.classpath">
        <pathelement location="${build.classes}"/>
        <fileset dir="${java.build.lib}">
        	<include name="*.jar" />
        </fileset>
    	<fileset dir="${basedir}/libs">
    	  	<include name="*.jar" />
    	</fileset>	
    </path>

	<target name="init">
		<mkdir dir="${build.classes}" />
	</target>

	<target name="build" depends="init">
		<javac destdir="${build.classes}">
			<src path="${build.src}" />
			<classpath>
				<path refid="java.simplegeo.classpath" />
			</classpath>
		</javac>
	</target>
	
	<target name="jar-with-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.name}.jar" basedir="${build.classes}">
			<zipgroupfileset dir="libs" includes="*.jar"/>
		</jar>
	</target>
	
	<target name="jar-without-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.name}.jar" basedir="${build.classes}" />
	</target>
	
	<target name="places-jar-with-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.places.name}.jar" basedir="${build.classes}" excludes="**/*ContextClient.class, **/*StorageClient.class">
			<zipgroupfileset dir="libs" includes="*.jar"/>
		</jar>
	</target>
	
	<target name="places-jar-without-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.places.name}.jar" basedir="${build.classes}" excludes="**/*ContextClient.class, **/*StorageClient.class" />
	</target>
	
	<target name="context-jar-with-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.context.name}.jar" basedir="${build.classes}" excludes="**/*PlacesClient.class, **/*StorageClient.class">
			<zipgroupfileset dir="libs" includes="*.jar"/>
		</jar>
	</target>
	
	<target name="context-jar-without-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.context.name}.jar" basedir="${build.classes}" excludes="**/*PlacesClient.class, **/*StorageClient.class" />
	</target>
	
	<target name="storage-jar-with-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.storage.name}.jar" basedir="${build.classes}" excludes="**/*PlacesClient.class, **/*ContextClient.class">
			<zipgroupfileset dir="libs" includes="*.jar"/>
		</jar>
	</target>
	
	<target name="storage-jar-without-libs" depends="build">
		<mkdir dir="${build.classes}/META-INF" />
		<jar jarfile="${build.out}/${final.storage.name}.jar" basedir="${build.classes}" excludes="**/*PlacesClient.class, **/*ContextClient.class" />
	</target>
	
	<target name="dist" depends="jar-without-libs,javadoc">
		<mkdir dir="${dist.dir}" />
		<copy file="${build.out}/${final.name}.jar" todir="${dist.dir}" />
		<copy todir="${dist.dir}" flatten="true">
			<fileset dir="${java.build.lib}">
				<include name="*.jar" />
			</fileset>
		</copy>
	    <copy todir="${dist.dir}/javadoc">
	        <fileset dir="${javadoc.dir}"/>
	    </copy>
	</target>
	
	<target name="build-test" depends="build">
		<mkdir dir="${test.classes}" />
	    <javac destdir="${test.classes}" >
	      <classpath>
	      	<path refid="java.simplegeo.classpath" />
		  </classpath>
	      <src path="${test.src.dir}"/>
	    </javac>

	</target>

	<target name="test" depends="build,build-test">
		<junit haltonfailure="yes" printsummary="on">
			<classpath>
				<path refid="java.simplegeo.classpath" />
				<pathelement location="${test.classes}" />
				<pathelement location="${basedir}/conf" />
			</classpath>
			<formatter type="plain" usefile="false"/>
			<batchtest todir="${build.test.dir}/output" >
        		<fileset dir="${test.classes}" includes="**/*Test.class" />
      		</batchtest>
		</junit>
	</target>
	
	<target name="javadoc" depends="init">
		<tstamp>
	     	<format property="YEAR" pattern="yyyy"/>
	   	</tstamp>
	   	<javadoc destdir="${javadoc.dir}" author="true" version="true" use="true"
  	    	  windowtitle="${ant.project.name}" classpathref="java.simplegeo.classpath"
	      		bottom="Copyright &amp;copy; ${YEAR} SimpleGeo Inc">

	     	<fileset dir="${build.src}" defaultexcludes="yes">
	       		<include name="**/*.java"/>
	     	</fileset>
	 </javadoc>
	</target>

	<target name="clean">
		<delete dir="${build.out}" />
		<delete dir="${dist.dir}" />
	</target>
				
</project>

